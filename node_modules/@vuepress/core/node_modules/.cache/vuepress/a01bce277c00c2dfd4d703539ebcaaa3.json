{"remainingRequest":"D:\\vuepress\\VuepressBlog\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vuepress\\VuepressBlog\\node_modules\\vuepress-plugin-toolbar\\components\\page-nav\\PageNav.vue?vue&type=style&index=0&id=56cfd044&lang=stylus&scoped=true&","dependencies":[{"path":"D:\\vuepress\\VuepressBlog\\node_modules\\vuepress-plugin-toolbar\\components\\page-nav\\PageNav.vue","mtime":1643102531056},{"path":"D:\\vuepress\\VuepressBlog\\node_modules\\css-loader\\dist\\cjs.js","mtime":1640872325856},{"path":"D:\\vuepress\\VuepressBlog\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1640872326265},{"path":"D:\\vuepress\\VuepressBlog\\node_modules\\postcss-loader\\src\\index.js","mtime":1640872326135},{"path":"D:\\vuepress\\VuepressBlog\\node_modules\\stylus-loader\\index.js","mtime":1640872327938},{"path":"D:\\vuepress\\VuepressBlog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1640872325640},{"path":"D:\\vuepress\\VuepressBlog\\node_modules\\vue-loader\\lib\\index.js","mtime":1640872326265}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmNsb3NlIHsKICBkaXNwbGF5IG5vbmUgIWltcG9ydGFudAp9Cg=="},{"version":3,"sources":["PageNav.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoIA;AACA;AACA","file":"PageNav.vue","sourceRoot":"node_modules/vuepress-plugin-toolbar/components/page-nav","sourcesContent":["<template>\r\n  <base-opt :config=\"configP\" v-bind:style=\"styleObject\" class=\"me-toolbar-sidebar-page-nav\">\r\n    <a v-if=\"pageTitleObj != null\"\r\n       :href=\"pageTitleObj.path\"\r\n       class=\"sidebar-link page-nav-title\">\r\n      {{pageTitleObj.name}}\r\n    </a>\r\n    <hr>\r\n    <div class=\"page-nav-scorll\">\r\n      <page-nav-item :menus=\"headers\"></page-nav-item>\r\n    </div>\r\n  </base-opt>\r\n</template>\r\n\r\n<script>\r\n  import BaseOpt from '../base-opt/BaseOpt'\r\n  import PageNavItem from './PageNavItem'\r\n\r\n  const DEFAULG_CONFIG = {\r\n    icon: 'iconfont icon-daohang',\r\n    name: '导航',\r\n  }\r\n  export default {\r\n    components: { BaseOpt, PageNavItem },\r\n    props: {\r\n      config: {},\r\n      pageObject: {},\r\n      pageKey: {},\r\n    },\r\n    data () {\r\n      return {\r\n        styleObject: {\r\n          display: undefined\r\n        },\r\n        configP: null,\r\n        headers: [],\r\n        pageTitleObj: null\r\n      }\r\n    },\r\n    created () {\r\n      let config = DEFAULG_CONFIG\r\n      if (this.config) {\r\n        config = Object.assign({}, DEFAULG_CONFIG, this.config)\r\n      } else {\r\n        config = Object.assign({}, DEFAULG_CONFIG, {\r\n          popover: {}\r\n        })\r\n      }\r\n      if (!config.popover) {\r\n        config.popover = {}\r\n      }\r\n      this.configP = config\r\n    },\r\n    methods: {\r\n      build () {\r\n        let tocs = this.buildTocs()\r\n        if (tocs.length == 1) {\r\n          this.pageTitleObj = tocs[0]\r\n          this.headers = tocs[0].childs\r\n        } else {\r\n          this.headers = tocs\r\n        }\r\n      },\r\n      buildTocs () {\r\n        let headerLins = document.querySelectorAll('.page .content__default .header-anchor')\r\n        if (headerLins && headerLins.length != 0) {\r\n          let headers = []\r\n          let h1Node = null\r\n          let h2Node = null\r\n          let h3Node = null\r\n          let h4Node = null\r\n          let h5Node = null\r\n          let h6Node = null\r\n          headerLins.forEach(item => {\r\n            let tagName = item.parentElement.tagName.toLowerCase()\r\n            let level = parseInt(tagName.substr(1))\r\n            let node = {\r\n              path: item.pathname + item.hash,\r\n              name: item.nextSibling.data,\r\n              level: level,\r\n              childs: []\r\n            }\r\n            switch (level) {\r\n              case 1:\r\n                h1Node = node\r\n                headers.push(node)\r\n                break\r\n              case 2:\r\n                h1Node.childs.push(node)\r\n                h2Node = node\r\n                break\r\n              case 3:\r\n                h2Node.childs.push(node)\r\n                h3Node = node\r\n                break\r\n              case 4:\r\n                h3Node.childs.push(node)\r\n                h4Node = node\r\n                break\r\n              case 5:\r\n                h4Node.childs.push(node)\r\n                h5Node = node\r\n                break\r\n              case 6:\r\n                h5Node.childs.push(node)\r\n                h6Node = node\r\n                break\r\n            }\r\n          })\r\n          // console.log(headers)\r\n          return headers\r\n        }\r\n      }\r\n    },\r\n    watch: {\r\n      pageKey (val) {\r\n      },\r\n      pageObject (val) {\r\n        if ('/' == val.path) {\r\n          this.styleObject.display = 'none'\r\n          return\r\n        }\r\n        this.styleObject.display = undefined\r\n        this.$nextTick(() => {\r\n          this.build()\r\n        })\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"stylus\" scoped>\r\n  .close {\r\n    display none !important\r\n  }\r\n</style>\r\n"]}]}