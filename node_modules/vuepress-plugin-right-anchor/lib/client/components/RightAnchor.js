"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RightAnchor = void 0;
const vue_1 = require("vue");
const client_1 = require("@vuepress/client");
const utils_1 = require("../utils");
const ts_debounce_1 = require("ts-debounce");
require("../styles/vars.css");
require("../styles/right-anchor.css");
exports.RightAnchor = (0, vue_1.defineComponent)({
    name: 'RightAnchor',
    setup() {
        var _a;
        const route = (0, client_1.useRoute)();
        const page = (0, client_1.usePageData)();
        const rightAnchor = (0, vue_1.ref)(page.value.rightAnchor);
        const raShow = (0, vue_1.ref)(!rightAnchor.value.isIgnore);
        const menuShow = (0, vue_1.ref)(false);
        const raCustomClass = (0, vue_1.ref)((_a = rightAnchor.value.customClass) !== null && _a !== void 0 ? _a : '');
        const scrollTop = (0, vue_1.ref)(0);
        const activeIndex = (0, vue_1.ref)(0);
        const headersList = (0, vue_1.ref)([]);
        const filterDataByLevel = (headers) => {
            if (headers.length === 0)
                return;
            headers.forEach((item) => {
                if (!rightAnchor.value.showDepth || item.level <= rightAnchor.value.showDepth + 1) {
                    headersList.value.push({ ...item });
                }
                filterDataByLevel(item.children);
            });
        };
        filterDataByLevel(page.value.headers);
        (0, vue_1.watch)(route, () => {
            headersList.value = [];
            const page = (0, client_1.usePageData)();
            rightAnchor.value = page.value.rightAnchor;
            filterDataByLevel(page.value.headers);
        });
        (0, vue_1.watch)(rightAnchor, (state) => {
            var _a;
            raShow.value = !state.isIgnore;
            if (state.expand.trigger === 'click')
                menuShow.value = state.expand.clickModeDefaultOpen;
            else
                menuShow.value = false;
            raCustomClass.value = (_a = state.customClass) !== null && _a !== void 0 ? _a : '';
        });
        const onRaMouseover = () => {
            if (rightAnchor.value.expand.trigger === "hover")
                menuShow.value = true;
        };
        const onRaMouseleave = () => {
            if (rightAnchor.value.expand.trigger === "hover")
                menuShow.value = false;
        };
        const onBtnClick = () => {
            if (rightAnchor.value.expand.trigger === "click")
                menuShow.value = !menuShow.value;
        };
        const headersListItemClick = (index, slug) => {
            activeIndex.value = index;
            (0, utils_1.scrollToTitle)(slug);
        };
        const RightAnchorBtnEl = () => (0, vue_1.h)('div', {
            class: 'right-anchor-button',
            onClick: onBtnClick,
            innerHTML: `
        <svg
  xmlns="http://www.w3.org/2000/svg"
  viewBox="0 0 448 512"
>
  <path
    fill="currentColor"
    d="M436 124H12c-6.627 0-12-5.373-12-12V80c0-6.627 5.373-12 12-12h424c6.627 0 12 5.373 12 12v32c0 6.627-5.373 12-12 12zm0 160H12c-6.627 0-12-5.373-12-12v-32c0-6.627 5.373-12 12-12h424c6.627 0 12 5.373 12 12v32c0 6.627-5.373 12-12 12zm0 160H12c-6.627 0-12-5.373-12-12v-32c0-6.627 5.373-12 12-12h424c6.627 0 12 5.373 12 12v32c0 6.627-5.373 12-12 12z"
  />
</svg>`
        });
        const RightAnchorMenuEl = () => (0, vue_1.h)('ul', {
            class: 'right-anchor-menu',
            style: `display: ${menuShow.value ? 'block' : 'none'}`
        }, headersList.value.map((item, index) => (0, vue_1.h)('li', {
            class: `right-anchor-menu-item${item.level > 2 ? ' sub' : ''} h${item.level}${index === activeIndex.value ? ' active' : ''}`,
            onClick: () => headersListItemClick(index, item.slug)
        }, item.title)));
        (0, vue_1.onMounted)(() => {
            scrollTop.value = (0, utils_1.getScrollTop)();
            window.addEventListener('scroll', (0, ts_debounce_1.debounce)(() => {
                scrollTop.value = (0, utils_1.getScrollTop)();
                headersList.value.forEach((item, index) => {
                    var _a;
                    const elOffsetTop = (_a = document.getElementById(item.slug)) === null || _a === void 0 ? void 0 : _a.offsetTop;
                    if (elOffsetTop) {
                        if (index === 0 && scrollTop.value < elOffsetTop)
                            activeIndex.value = 0;
                        else if (scrollTop.value >= elOffsetTop)
                            activeIndex.value = index;
                    }
                });
            }, 100));
        });
        return () => raShow.value && headersList.value.length > 0
            ?
                (0, vue_1.h)('div', {
                    class: `right-anchor is-global ${raCustomClass.value}`,
                    onMouseover: onRaMouseover,
                    onMouseleave: onRaMouseleave,
                }, [
                    RightAnchorBtnEl(),
                    RightAnchorMenuEl()
                ])
            :
                null;
    }
});
exports.default = exports.RightAnchor;
